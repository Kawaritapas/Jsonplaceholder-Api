[{"C:\\Users\\tapas\\Desktop\\pride\\src\\index.js":"1","C:\\Users\\tapas\\Desktop\\pride\\src\\App.js":"2","C:\\Users\\tapas\\Desktop\\pride\\src\\Post.js":"3"},{"size":199,"mtime":1611395152174,"results":"4","hashOfConfig":"5"},{"size":692,"mtime":1611413047398,"results":"6","hashOfConfig":"5"},{"size":3269,"mtime":1611412787204,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"11wpu1d",{"filePath":"11","messages":"12","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"13","messages":"14","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\tapas\\Desktop\\pride\\src\\index.js",[],["15","16"],"C:\\Users\\tapas\\Desktop\\pride\\src\\App.js",["17"],"C:\\Users\\tapas\\Desktop\\pride\\src\\Post.js",["18","19"],{"ruleId":"20","replacedBy":"21"},{"ruleId":"22","replacedBy":"23"},{"ruleId":"24","severity":1,"message":"25","line":10,"column":24,"nodeType":"26","endLine":10,"endColumn":32},{"ruleId":"27","severity":1,"message":"28","line":1,"column":37,"nodeType":"29","messageId":"30","endLine":1,"endColumn":46},{"ruleId":"27","severity":1,"message":"31","line":1,"column":48,"nodeType":"29","messageId":"30","endLine":1,"endColumn":54},"no-native-reassign",["32"],"no-negated-in-lhs",["33"],"react-hooks/exhaustive-deps","Assignments to the 'posts' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","MemberExpression","no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useRef' is defined but never used.","no-global-assign","no-unsafe-negation"]